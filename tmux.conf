# better terminal colors
set -g default-terminal "screen-256color"

set -g status on
set -g status-interval 2
set -g status-left-length 150
set -g status-right ''
set -g status-right-length 150

%if #{==:#{HEROKU_COLORS},true}
  # Heroku colorscheme
  set -g window-status-format "#[fg=colour244,bg=colour234] #I #[fg=colour240] #[default]#W "
  set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"
  set -g status-left '#[fg=colour16,bg=colour254,nobold]#{?client_prefix, ﱱ ,}#[fg=colour16,bg=colour254,bold] %H:%M  #S #[fg=colour254,bg=colour234,nobold]'
  set-option -g status-style bg=colour234
%else
  # MiTo Laser colorscheme
  set -g window-status-format "#[fg=colour6,bg=colour17] #I #[fg=colour6] #[default]#W "
  set -g window-status-current-format "#[fg=colour17,bg=colour1]#[fg=colour17,bg=colour1] #I  #[fg=colour17,bold]#W #[fg=colour1,bg=colour17,nobold]"
  set -g status-left '#[fg=colour1,bg=colour17,bold]#{?client_prefix, ,}#[fg=colour1,bg=colour17,nobold] %H:%M  #S #[fg=colour17,bg=colour17,nobold]'
  set-option -g status-style bg=colour17
%endif

# basic configuration
unbind C-b
set -g prefix C-a

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi L send-keys -X end-of-line
bind-key -T copy-mode-vi H send-keys -X start-of-line

# almost endless history
set -g history-limit 999999999

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# panes and windows configurations
set -g base-index 1
set -g pane-base-index 1
set -sg escape-time 1
bind r source-file ~/.tmux.conf \; display "tmux conf Reloaded!"
bind c new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind H resize-pane -L 10
bind J resize-pane -D 10
bind K resize-pane -U 10
bind L resize-pane -R 10

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# Truly clears terminal completely if you are using bash
bind -n C-k if-shell "$is_vim" "send-keys C-k" "send-keys -R \; clear-history \; send-keys C-l"
bind -n C-f if-shell "$is_vim" "send-keys C-f" "send-keys \e f"
bind -n C-b if-shell "$is_vim" "send-keys C-b" "send-keys \e b"

# Reindex windows
set-option -g renumber-windows on

# default window title colors
set-option -g window-status-style fg=colour247
set-option -g window-status-style bg=default

# pane border
set-option -g pane-border-style fg=colour235
set-option -g pane-active-border-style fg=colour255

# message text
set-option -g message-style bg=colour235
set-option -g message-style fg=colour196

# pane number display
set-option -g display-panes-active-colour colour20
set-option -g display-panes-colour colour196

# tmux on osx shitty clipboard fix
set-option -g default-command "reattach-to-user-namespace -l bash"
