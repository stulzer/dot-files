# clear the ps1
function ps1 {
  PS1="\[$ESC[${DULL};${FG_GREEN}m\]\n\u:\[$ESC[${DULL};${FG_YELLOW}m\]$1 \$ \[$ESC[${DULL};${FG_WHITE};${BG_NULL}m\]"
}

rename_numerically () {
  a=1
  for i in *.jpg; do
    new=$(printf "%01d.jpg" "$a") #04 pad to length of 4
    mv -- "$i" "$new"
    let a=a+1
  done
}

# ssh autocomplete
_complete_ssh_hosts () {
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  comp_ssh_hosts=`cat ~/.ssh/known_hosts | \
                  cut -f 1 -d ' ' | \
                  sed -e s/,.*//g | \
                  grep -v ^# | \
                  uniq | \
                  grep -v "\[" ;
                  cat ~/.ssh/config | \
                  grep "^Host " | \
                  awk '{print $2}'`
  COMPREPLY=( $(compgen -W "${comp_ssh_hosts}" -- $cur))
  return 0
}

complete -F _complete_ssh_hosts ssh

# RAILS
function rails_app() {
  rails new $1 -d postgresql -Tm https://github.com/stulzer/rails-template/raw/master/template.rb
}

# quick display/hide dot files
function display_dotfiles(){
  defaults write com.apple.finder AppleShowAllFiles TRUE
  killall Finder
}

function hide_dotfiles(){
  defaults write com.apple.finder AppleShowAllFiles FALSE
  killall Finder
}

function zipr() {
  zip -r $1.zip $1
}

function sf(){
  open -a Safari http://$1
}

function tarc(){
  tar -czvf $1 $2
}

function tarx(){
  tar -xzvf $1 $2
}

function dev() {
  open http://$(basename $PWD).dev/
}

# heroku
function opro() {
  heroku open --app $(basename $PWD)-production
}

function osta() {
  heroku open --app $(basename $PWD)-staging
}

# Usage: changes d038ff1 5d7f017
function changes() {
  git log $1..$2 --pretty=format:'*%s*%n%b' --no-merges
}

function hl() {
  if [ -z "$2" ]
    then src="pbpaste"
  else
    src="cat $2"
  fi
  $src | highlight -O rtf --syntax $1 --font Inconsolata --font-size 24 | pbcopy
}

# Run RSpec on each last commit based on the number of commits you pass as argument
function rspec_last_commits() {
  current_branch="$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/')"
  for hash in $(git log -$1 --pretty=format:"%h"); do git checkout $hash && bundle exec rspec; done
  git checkout $current_branch
}

function rr_last_commits() {
  current_branch="$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/')"
  for hash in $(git log -$1 --pretty=format:"%h"); do git checkout $hash && bundle exec rspec && bundle exec rubocop; done
  git checkout $current_branch
}

# kill all process with the grepped pattern
function kill_em_all() {
  ps -fax | grep -v grep | grep $1 | awk '{print $2}' | xargs kill -9
}

function ruby_version() {
  if [ -e .ruby-version ]
    then cat .ruby-version
  else
    rbenv global
  fi
}
